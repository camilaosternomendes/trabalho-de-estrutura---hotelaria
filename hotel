#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_NOME 50
#define MAX_QUARTOS 50
#define ARQUIVO "hospedes.txt"
// Definição da estrutura de dados para representar um hóspede
typedef struct Hospede {
    char nome[MAX_NOME];
    int quarto;
    struct Hospede *prox;
} Hospede;

// Definição da estrutura de dados para representar um hotel
typedef struct {
    Hospede *inicio;
} Hotel;
// Função para inicializar o hotel, alocando memória e inicializando a lista de hóspedes
Hotel* inicializarHotel() {
    // Aloca memória para a estrutura Hotel
    Hotel hotel = (Hotel)malloc(sizeof(Hotel));
 // Verifica se a alocação foi bem-sucedida
    if (hotel == NULL) {
        printf("Ops! Houve um erro ao criar o hotel. Por favor, tente novamente mais tarde.\n");
        exit(EXIT_FAILURE);
    }
// Inicializa a lista de hóspedes como vazia
    hotel->inicio = NULL;
    return hotel;
}
// Função para cadastrar um novo hóspede no hotel
void cadastrarHospede(Hotel *hotel, char nome[], int quarto) {
    // Verifica se o número do quarto é válido
    if (quarto < 1 || quarto > MAX_QUARTOS) {
        printf("Ops! Número do quarto inválido. Escolha um número entre 1 e %d.\n", MAX_QUARTOS);
        return;
    }
// Aloca memória para o novo hóspede
    Hospede novoHospede = (Hospede)malloc(sizeof(Hospede));
    // Verifica se a alocação foi bem-sucedida
    if (novoHospede == NULL) {
        printf("Ops! Houve um problema ao cadastrar o hóspede. Por favor, tente novamente mais tarde.\n");
        exit(EXIT_FAILURE);
    }
